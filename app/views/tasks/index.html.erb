<h1>Tasks</h1>

<div style="width: 400px; float: right; padding: 12px; border: 3px solid #ccc; margin: 12px; border-radius: 8px; background: #eee">
	<p>There is some additional research required:</p>
	<ol>
		<li class="done">To make the view dry, used nested partials</li>
		<li class="done">To make the view logic-less, the view-state should return collections of wrapped elements. These could have a url method</li>
		<li>Organize the business logic into separate namespaces, not required for this app, but as soon as there are multiple resource types it will matter</li>
		<li class="done">Find a way to share JavaScript utility functions with the js-views of Rails, because these views are not DRY at all</li>
		<li>Testing strategy</li>
		<li>Database transactions (using decorators for cross-cutting concerns)</li>
		<li><a href="http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/">Refactor fat models</a></li>
		<li class="done"><a href="https://github.com/mixonic/ranked-model">Ranked model (uses spread of numbers)</a></li>
		<li class="done"><a href="https://github.com/codegram/resort">Resort (uses linked list)</a></li>
		<li class="done"><a href="https://github.com/walterhorstman/ordered-active-record">Ordered ActiveRecord (classic position field)</a></li>
	</ol>
</div>

<%= @task_list.render(self) %>